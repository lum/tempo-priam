create keyspace tempo
  with placement_strategy = 'NetworkTopologyStrategy'
  and strategy_options = {us-east:<%= node[:cassandra][:replication_factor] %>};

use tempo;

create column family counters
  with comparator = 'UTF8Type'
  and default_validation_class = 'CounterColumnType'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};

INCR counters['global']['total_users'] BY 1;
  
create column family users
  with comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};
  
create column family sessions
  with comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};

create column family entities
  with comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};

create column family schedule
  with comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};
    
  create column family dictionaries
  with comparator = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};

create column family tempo_system
  with comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};

create column family flurry_data
  with comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};

create column family flurry_stats
  with comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};

create column family email_stats
  with comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and compression_options={sstable_compression:SnappyCompressor, chunk_length_kb:64};

assume users keys as utf8;
set users['email_index']['<%= node[:email_index][:admin_username] %>'] = '<%= node[:email_index][:admin_username_hash] %>';
set users['<%= node[:email_index][:admin_username_hash] %>']['user'] = ' {"id":"<%= node[:email_index][:admin_username_hash] %>","password":"<%= node[:email_index][:admin_username][:password] %>","salt":"<%= node[:email_index][:admin_username][:salt] %>","roles":["user","admin","usermigration"],"email":"<%= node[:email_index][:admin_username] %>"}';

assume users keys as utf8;
set users['email_index']['<%= node[:email_index][:migration_username] %>'] = '<%= node[:email_index][:migration_username_hash] %>';
set users['<%= node[:email_index][:migration_username_hash] %>']['user'] = ' {"id":"<%= node[:email_index][:migration_username_hash] %>","password":"<%= node[:email_index][:migration_username][:password] %>","salt":"<%= node[:email_index][:migration_username][:salt] %>","roles":["user","admin","usermigration"],"email":"<%= node[:email_index][:migration_username] %>"}';
